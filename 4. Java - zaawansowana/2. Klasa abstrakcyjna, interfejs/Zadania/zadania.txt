1. (geom) Stworzymy abstrakcyjną klasę Shape, która będzie miała pole:
private String color;
metodę abstrakcyjną getArea(); (pole powierzchni)
oraz metodę abstrakcyjną getPerimeter(); (obwód)
2. (geom) Tworzymy klasę Rectangle o dwóch polach typu int (reprezentujące długości boków), która będzie rozszerzała klasę Shape.
3. (geom) Analogicznie tworzymy klasę Circle
4. (geom) Tworzymy klasę Square, która będzie rozszerzała klasę Rectangle.
5. (prod) Stwórz interfejs Product (produkt w sklepie) z metodami:
int getPrice();
int getWeight();
6. (prod) Stwórz klasę ChocolateBar, która będzie reprezentowała batonik. Batonik ma pola cena i waga. Niech batonik będzie produktem (implementuje interfejs Product).
7. (prod) Stwórz klasę Milk, która reprezenetuje mleko. Mleko ma pola: objętość, gęstość, oraz cena za kilogram. Niech mleko także będzie produktem.
8. (geom) Tworzymy interfejs Solid (Bryła) o metodach abstrakcyjnych getSurfaceArea oraz getVolume.
9. (geom) Tworzymy klasy reprezentujące bryły obrotowe:
Stożek oraz Walec
10. (geom) Graniastosłupy:
Prostopadłościan oraz Sześcian
11. (geom) Stwórz klasę PerpendicularSolid, która będzie reprezentowała bryłę o dwóch równoległych, jednakowych podstawach, której ściany będą prostopadłe do podstaw. Użyj jako podstaw obiektu typu Shape.
12. (prod) Stwórz klasę ShoppingCart, który reprezentuje koszyk z zakupami. Niech klasa posiada pole - tablicę produktów oraz metodę getTotalPrice, która zwróci łączną cenę produktów.
13. (prod) Stwórz klasę Package - produkt będący paczką produktów. Paczka produktów kosztuje tyle, ile łącznie kosztują produkty, które zawiera.
14. (prod) Zastosuj wzorzec dekoratora (wygoogluj) tak, aby uzyskać produkt, który może mieć nałożony rabat.
